let imgs = content.find('img'); //获取图片
          imgs.each(async (j, img) => {
            let src = $(img).attr("src");
            let imgname = `${volume}_${chapter}_${j}.jpg`;
            let imgtag = xhtml.createElement('img');
            imgtag.setAttribute("src", `../Image/${imgname}`);
            xhtml.getElementsByTagName('section')[0].appendChild(imgtag);
            getImg(src, volume, chapter, j, book, xhtml);
          });

async function getImg(src, volume, chapter, j, book, xhtml) {
  let imgname = `${volume}_${chapter}_${j}.jpg`;
  let imgpath = `OEBPS/Image/${imgname}`;
  const response = await axios.get(src, {
    responseType: 'arraybuffer',
    headers: {
      'Referer': 'https://example.com', // 替换为实际的 Referer
      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'
    }
  });
  book.file(imgpath, response.data);
  let imgtag = xhtml.createElement('img');
  imgtag.setAttribute("src", `../Image/${imgname}`);
  xhtml.getElementsByTagName('section')[0].appendChild(imgtag);

  // 更新 OPF 文件
  let opfContent = await book.file("OEBPS/content.opf").async("string");
  const opf = new DOMParser().parseFromString(opfContent, 'application/xml');
  let item = opf.createElement('item');
  item.setAttribute("id", imgname);
  item.setAttribute("href", imgpath);
  item.setAttribute("media-type", "image/jpeg");
  opf.getElementsByTagName('manifest')[0].appendChild(item);
  book.file("OEBPS/content.opf", Buffer.from(iconv.encode(new XMLSerializer().serializeToString(opf), 'utf-8')));
}